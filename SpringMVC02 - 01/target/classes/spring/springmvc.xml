<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.2.xsd">
	<!-- 视图解析器
		 解析jsp的视图解析器
		默认使用jstl标签,classpath下得有jstl包
	-->
	<!--可以为视图解析器配置前缀和后缀-->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
			<property name="prefix" value="/WEB-INF/jsp/"/>
			<property name="suffix" value=".jsp"/>
	</bean>

	<!--
		对应注解的handler可以单独配置,
		实际开发中建议使用组件扫描
	-->
	<context:component-scan base-package="com.mybatis.controller"></context:component-scan>

	<!--使用mvc的注解驱动可以代替以上俩个注解映射器和注解适配器的配置
	   默认加载了很多的参数绑定方法,比如json转换解析器默认就加载了..
	   实际开发时使用...
	-->
	<mvc:annotation-driven></mvc:annotation-driven>
	<!--<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/>
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"/>-->
</beans>
